Code Quality Report - 2025-03-30 00:07:04
================================================================================

[1m[93m================================================================================[0m
[1m[93m= BLACK - Code formatting check[0m
[1m[93m================================================================================[0m


[91mAll done! ✨ 🍰 ✨
18 files would be left unchanged.
[0m

[1m[93m================================================================================[0m
[1m[93m= ISORT - Import order check[0m
[1m[93m================================================================================[0m

Skipped 1 files


[1m[93m================================================================================[0m
[1m[93m= FLAKE8 - Code style check[0m
[1m[93m================================================================================[0m

./app.py:21:1: C901 'create_app' is too complex (18)
./models.py:2:1: F401 'datetime.datetime' imported but unused
./models.py:16:101: E501 line too long (106 > 100 characters)
./models.py:73:101: E501 line too long (107 > 100 characters)
./models.py:114:101: E501 line too long (106 > 100 characters)
./models.py:132:101: E501 line too long (105 > 100 characters)
./models.py:177:25: F821 undefined name 'Enum'
./models.py:188:23: F821 undefined name 'Enum'
./models.py:201:101: E501 line too long (105 > 100 characters)
./models.py:285:101: E501 line too long (104 > 100 characters)
./models.py:458:1: C901 'assign_task' is too complex (12)
./models.py:540:1: C901 'create_task' is too complex (28)
./routes/project_routes.py:65:1: C901 'create_project' is too complex (12)
./routes/project_routes.py:172:1: C901 'update_project' is too complex (15)
./routes/task_routes.py:8:1: F401 'extentions.extensions.cache' imported but unused
./routes/task_routes.py:71:1: C901 'create_task' is too complex (23)
./routes/task_routes.py:151:101: E501 line too long (104 > 100 characters)
./routes/task_routes.py:166:101: E501 line too long (104 > 100 characters)
./routes/task_routes.py:199:1: C901 'task_operations' is too complex (26)
./routes/task_routes.py:210:101: E501 line too long (101 > 100 characters)
./routes/task_routes.py:259:101: E501 line too long (112 > 100 characters)
./routes/task_routes.py:274:101: E501 line too long (112 > 100 characters)
./routes/task_routes.py:297:101: E501 line too long (104 > 100 characters)
./routes/task_routes.py:335:1: C901 'get_tasks' is too complex (14)
./routes/team_routes.py:124:1: C901 'update_team' is too complex (12)
./routes/team_routes.py:220:1: C901 'add_team_member' is too complex (12)
./routes/user_routes.py:1:1: F401 'uuid.UUID' imported but unused
./routes/user_routes.py:124:1: C901 'update_user' is too complex (12)
./routes/user_routes.py:244:13: F841 local variable 'e' is assigned to but never used
./tests/test_app.py:31:101: E501 line too long (124 > 100 characters)
./tests/test_app.py:32:101: E501 line too long (102 > 100 characters)
./tests/test_auth.py:29:101: E501 line too long (124 > 100 characters)
./tests/test_auth.py:30:101: E501 line too long (102 > 100 characters)
./tests/test_task_routes.py:29:101: E501 line too long (103 > 100 characters)
./tests/test_task_routes.py:145:9: F841 local variable 'user_id' is assigned to but never used
./tests/test_team_routes.py:5:1: F401 'datetime.datetime' imported but unused
./tests/test_team_routes.py:5:1: F401 'datetime.timedelta' imported but unused
./tests/test_team_routes.py:11:1: F401 'models.PriorityEnum' imported but unused
./tests/test_team_routes.py:11:1: F401 'models.StatusEnum' imported but unused
./tests/test_user_routes.py:2:1: F401 'uuid' imported but unused
./tests/test_user_routes.py:6:1: F401 'werkzeug.security.check_password_hash' imported but unused
./tests/test_user_routes.py:29:101: E501 line too long (103 > 100 characters)


[1m[93m================================================================================[0m
[1m[93m= PYLINT - Static code analysis[0m
[1m[93m================================================================================[0m

************* Module /Users/matheomorin/Desktop/Univ Oulu/web project/Task-management-LLM-API/.pylintrc
.pylintrc:1:0: R0022: Useless option value for '--disable', 'C0330' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/3571. (useless-option-value)
************* Module app
app.py:59:4: R0911: Too many return statements (7/6) (too-many-return-statements)
app.py:175:4: W0105: String statement has no effect (pointless-string-statement)
************* Module models
models.py:16:0: C0301: Line too long (106/100) (line-too-long)
models.py:73:0: C0301: Line too long (107/100) (line-too-long)
models.py:114:0: C0301: Line too long (106/100) (line-too-long)
models.py:132:0: C0301: Line too long (105/100) (line-too-long)
models.py:201:0: C0301: Line too long (105/100) (line-too-long)
models.py:285:0: C0301: Line too long (104/100) (line-too-long)
models.py:22:14: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:23:15: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:23:25: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:24:12: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:24:22: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:25:20: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:25:30: E1101: Instance of 'SQLAlchemy' has no 'Text' member (no-member)
models.py:26:11: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:26:21: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:27:17: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:27:27: E1101: Instance of 'SQLAlchemy' has no 'DateTime' member (no-member)
models.py:27:48: E1101: Instance of 'SQLAlchemy' has no 'func' member (no-member)
models.py:28:17: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:28:27: E1101: Instance of 'SQLAlchemy' has no 'DateTime' member (no-member)
models.py:30:12: E1101: Instance of 'SQLAlchemy' has no 'relationship' member (no-member)
models.py:31:12: E1101: Instance of 'SQLAlchemy' has no 'relationship' member (no-member)
models.py:38:20: E1101: Instance of 'SQLAlchemy' has no 'relationship' member (no-member)
models.py:41:20: E1101: Instance of 'SQLAlchemy' has no 'relationship' member (no-member)
models.py:44:18: E1101: Instance of 'SQLAlchemy' has no 'relationship' member (no-member)
models.py:79:14: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:80:11: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:80:21: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:81:18: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:81:28: E1101: Instance of 'SQLAlchemy' has no 'Text' member (no-member)
models.py:82:17: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:82:27: E1101: Instance of 'SQLAlchemy' has no 'DateTime' member (no-member)
models.py:82:48: E1101: Instance of 'SQLAlchemy' has no 'func' member (no-member)
models.py:83:14: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:83:44: E1101: Instance of 'SQLAlchemy' has no 'ForeignKey' member (no-member)
models.py:85:15: E1101: Instance of 'SQLAlchemy' has no 'relationship' member (no-member)
models.py:86:18: E1101: Instance of 'SQLAlchemy' has no 'relationship' member (no-member)
models.py:120:18: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:121:11: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:121:21: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:122:18: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:122:28: E1101: Instance of 'SQLAlchemy' has no 'Text' member (no-member)
models.py:123:12: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:123:22: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:126:15: E1101: Instance of 'SQLAlchemy' has no 'relationship' member (no-member)
models.py:138:17: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:139:12: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:139:22: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:140:18: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:140:28: E1101: Instance of 'SQLAlchemy' has no 'Text' member (no-member)
models.py:141:13: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:141:23: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:142:15: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:142:25: E1101: Instance of 'SQLAlchemy' has no 'DateTime' member (no-member)
models.py:143:14: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:143:44: E1101: Instance of 'SQLAlchemy' has no 'ForeignKey' member (no-member)
models.py:144:18: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:145:28: E1101: Instance of 'SQLAlchemy' has no 'ForeignKey' member (no-member)
models.py:149:15: E1101: Instance of 'SQLAlchemy' has no 'relationship' member (no-member)
models.py:150:12: E1101: Instance of 'SQLAlchemy' has no 'relationship' member (no-member)
models.py:177:24: E0602: Undefined variable 'Enum' (undefined-variable)
models.py:188:22: E0602: Undefined variable 'Enum' (undefined-variable)
models.py:199:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
models.py:207:14: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:208:12: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:208:22: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:209:18: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:209:28: E1101: Instance of 'SQLAlchemy' has no 'Text' member (no-member)
models.py:210:13: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:210:23: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:210:46: E1101: Instance of 'str' has no 'value' member (no-member)
models.py:211:15: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:211:25: E1101: Instance of 'SQLAlchemy' has no 'Integer' member (no-member)
models.py:211:45: E1101: Instance of 'int' has no 'value' member (no-member)
models.py:212:15: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:212:25: E1101: Instance of 'SQLAlchemy' has no 'DateTime' member (no-member)
models.py:213:17: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:214:28: E1101: Instance of 'SQLAlchemy' has no 'ForeignKey' member (no-member)
models.py:216:18: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:216:48: E1101: Instance of 'SQLAlchemy' has no 'ForeignKey' member (no-member)
models.py:217:17: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:217:47: E1101: Instance of 'SQLAlchemy' has no 'ForeignKey' member (no-member)
models.py:218:17: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:218:47: E1101: Instance of 'SQLAlchemy' has no 'ForeignKey' member (no-member)
models.py:220:4: R0917: Too many positional arguments (10/5) (too-many-positional-arguments)
models.py:224:17: E1101: Instance of 'int' has no 'value' member (no-member)
models.py:226:15: E1101: Instance of 'str' has no 'value' member (no-member)
models.py:291:20: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:292:14: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:292:44: E1101: Instance of 'SQLAlchemy' has no 'ForeignKey' member (no-member)
models.py:293:14: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:293:44: E1101: Instance of 'SQLAlchemy' has no 'ForeignKey' member (no-member)
models.py:294:11: E1101: Instance of 'SQLAlchemy' has no 'Column' member (no-member)
models.py:294:21: E1101: Instance of 'SQLAlchemy' has no 'String' member (no-member)
models.py:338:8: E1101: Instance of 'scoped_session' has no 'add' member (no-member)
models.py:339:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
models.py:342:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
models.py:343:8: W0707: Consider explicitly re-raising using 'except IntegrityError as exc' and 'raise ValueError('Username or email already exists') from exc' (raise-missing-from)
models.py:345:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
models.py:346:8: W0707: Consider explicitly re-raising using 'raise Exception(f'Error creating user: {str(e)}') from e' (raise-missing-from)
models.py:346:8: W0719: Raising too general exception: Exception (broad-exception-raised)
models.py:389:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
models.py:392:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
models.py:393:8: W0707: Consider explicitly re-raising using 'except IntegrityError as exc' and 'raise ValueError('Update violates unique constraints (username or email)') from exc' (raise-missing-from)
models.py:395:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
models.py:396:8: W0707: Consider explicitly re-raising using 'raise Exception(f'Error updating user: {str(e)}') from e' (raise-missing-from)
models.py:396:8: W0719: Raising too general exception: Exception (broad-exception-raised)
models.py:410:12: E1101: Instance of 'scoped_session' has no 'delete' member (no-member)
models.py:411:12: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
models.py:415:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
models.py:416:8: W0707: Consider explicitly re-raising using 'raise Exception(f'Error deleting user: {str(e)}') from e' (raise-missing-from)
models.py:416:8: W0719: Raising too general exception: Exception (broad-exception-raised)
models.py:450:8: E1101: Instance of 'scoped_session' has no 'add' member (no-member)
models.py:451:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
models.py:454:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
models.py:455:8: W0707: Consider explicitly re-raising using 'raise Exception(f'Error creating team: {str(e)}') from e' (raise-missing-from)
models.py:455:8: W0719: Raising too general exception: Exception (broad-exception-raised)
models.py:458:0: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
models.py:496:12: W0707: Consider explicitly re-raising using 'except (ValueError, TypeError) as exc' and 'raise ValueError(f'Priority must be a valid integer: {priority}') from exc' (raise-missing-from)
models.py:506:8: E1101: Instance of 'scoped_session' has no 'add' member (no-member)
models.py:507:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
models.py:510:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
models.py:511:8: W0707: Consider explicitly re-raising using 'raise Exception(f'Error assigning task: {str(e)}') from e' (raise-missing-from)
models.py:511:8: W0719: Raising too general exception: Exception (broad-exception-raised)
models.py:527:16: W0707: Consider explicitly re-raising using 'except (ValueError, TypeError) as exc' and 'raise ValueError(f'Invalid project ID format: {project_id}') from exc' (raise-missing-from)
models.py:540:0: R0917: Too many positional arguments (9/5) (too-many-positional-arguments)
models.py:540:0: R0914: Too many local variables (16/15) (too-many-locals)
models.py:543:13: E1101: Instance of 'int' has no 'value' member (no-member)
models.py:545:11: E1101: Instance of 'str' has no 'value' member (no-member)
models.py:577:12: W0707: Consider explicitly re-raising using 'except (ValueError, TypeError) as exc' and 'raise ValueError(f'Priority must be a valid integer: {priority}') from exc' (raise-missing-from)
models.py:589:20: W0707: Consider explicitly re-raising using 'except (ValueError, TypeError) as exc' and 'raise ValueError(f'Invalid project ID format: {project_id}') from exc' (raise-missing-from)
models.py:601:20: W0707: Consider explicitly re-raising using 'except (ValueError, TypeError) as exc' and 'raise ValueError(f'Invalid assignee ID format: {assignee_id}') from exc' (raise-missing-from)
models.py:613:20: W0707: Consider explicitly re-raising using 'except (ValueError, TypeError) as exc' and 'raise ValueError(f'Invalid creator ID format: {created_by}') from exc' (raise-missing-from)
models.py:625:20: W0707: Consider explicitly re-raising using 'except (ValueError, TypeError) as exc' and 'raise ValueError(f'Invalid updater ID format: {updated_by}') from exc' (raise-missing-from)
models.py:642:8: E1101: Instance of 'scoped_session' has no 'add' member (no-member)
models.py:643:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
models.py:646:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
models.py:647:8: W0707: Consider explicitly re-raising using 'raise Exception(f'Error creating task: {str(e)}') from e' (raise-missing-from)
models.py:647:8: W0719: Raising too general exception: Exception (broad-exception-raised)
models.py:540:0: R0912: Too many branches (21/12) (too-many-branches)
models.py:540:0: R0915: Too many statements (54/50) (too-many-statements)
models.py:683:16: W0707: Consider explicitly re-raising using 'except (ValueError, TypeError) as exc' and 'raise ValueError(f'Invalid task ID format: {task_id}') from exc' (raise-missing-from)
models.py:687:12: E1101: Instance of 'scoped_session' has no 'delete' member (no-member)
models.py:688:12: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
models.py:692:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
models.py:2:0: W0611: Unused datetime imported from datetime (unused-import)
************* Module routes.user_routes
routes/user_routes.py:82:8: E1101: Instance of 'scoped_session' has no 'add' member (no-member)
routes/user_routes.py:83:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/user_routes.py:87:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/user_routes.py:93:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/user_routes.py:176:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/user_routes.py:180:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/user_routes.py:124:0: R0911: Too many return statements (7/6) (too-many-return-statements)
routes/user_routes.py:214:8: E1101: Instance of 'scoped_session' has no 'delete' member (no-member)
routes/user_routes.py:215:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/user_routes.py:219:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/user_routes.py:244:12: W0612: Unused variable 'e' (unused-variable)
routes/user_routes.py:1:0: W0611: Unused UUID imported from uuid (unused-import)
************* Module routes.task_routes
routes/task_routes.py:151:0: C0301: Line too long (104/100) (line-too-long)
routes/task_routes.py:166:0: C0301: Line too long (104/100) (line-too-long)
routes/task_routes.py:210:0: C0301: Line too long (101/100) (line-too-long)
routes/task_routes.py:259:0: C0301: Line too long (112/100) (line-too-long)
routes/task_routes.py:274:0: C0301: Line too long (112/100) (line-too-long)
routes/task_routes.py:297:0: C0301: Line too long (104/100) (line-too-long)
routes/task_routes.py:136:36: E1101: Instance of 'str' has no 'value' member (no-member)
routes/task_routes.py:185:8: E1101: Instance of 'scoped_session' has no 'add' member (no-member)
routes/task_routes.py:186:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/task_routes.py:193:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/task_routes.py:71:0: R0911: Too many return statements (14/6) (too-many-return-statements)
routes/task_routes.py:71:0: R0912: Too many branches (17/12) (too-many-branches)
routes/task_routes.py:227:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
routes/task_routes.py:232:12: E1101: Instance of 'scoped_session' has no 'delete' member (no-member)
routes/task_routes.py:233:12: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/task_routes.py:320:12: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/task_routes.py:329:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/task_routes.py:199:0: R0911: Too many return statements (13/6) (too-many-return-statements)
routes/task_routes.py:199:0: R0912: Too many branches (23/12) (too-many-branches)
routes/task_routes.py:214:4: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
routes/task_routes.py:199:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
routes/task_routes.py:335:0: R0911: Too many return statements (8/6) (too-many-return-statements)
routes/task_routes.py:8:0: W0611: Unused cache imported from extentions.extensions (unused-import)
************* Module routes.team_routes
routes/team_routes.py:80:8: E1101: Instance of 'scoped_session' has no 'add' member (no-member)
routes/team_routes.py:81:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/team_routes.py:86:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/team_routes.py:172:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/team_routes.py:176:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/team_routes.py:124:0: R0911: Too many return statements (7/6) (too-many-return-statements)
routes/team_routes.py:204:8: E1101: Instance of 'scoped_session' has no 'delete' member (no-member)
routes/team_routes.py:205:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/team_routes.py:209:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/team_routes.py:272:8: E1101: Instance of 'scoped_session' has no 'add' member (no-member)
routes/team_routes.py:273:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/team_routes.py:277:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/team_routes.py:220:0: R0911: Too many return statements (10/6) (too-many-return-statements)
routes/team_routes.py:327:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/team_routes.py:331:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/team_routes.py:285:0: R0911: Too many return statements (8/6) (too-many-return-statements)
routes/team_routes.py:370:8: E1101: Instance of 'scoped_session' has no 'delete' member (no-member)
routes/team_routes.py:371:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/team_routes.py:375:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
************* Module routes.project_routes
routes/project_routes.py:114:8: E1101: Instance of 'scoped_session' has no 'add' member (no-member)
routes/project_routes.py:115:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/project_routes.py:131:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/project_routes.py:65:0: R0911: Too many return statements (8/6) (too-many-return-statements)
routes/project_routes.py:229:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/project_routes.py:235:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
routes/project_routes.py:172:0: R0911: Too many return statements (7/6) (too-many-return-statements)
routes/project_routes.py:267:8: E1101: Instance of 'scoped_session' has no 'delete' member (no-member)
routes/project_routes.py:268:8: E1101: Instance of 'scoped_session' has no 'commit' member (no-member)
routes/project_routes.py:274:8: E1101: Instance of 'scoped_session' has no 'rollback' member (no-member)
************* Module validators
validators/__init__.py:5:0: E0611: No name 'validate_project_data' in module 'validators.validators' (no-name-in-module)
validators/__init__.py:5:0: E0611: No name 'validate_task_data' in module 'validators.validators' (no-name-in-module)
validators/__init__.py:5:0: E0611: No name 'validate_team_data' in module 'validators.validators' (no-name-in-module)
validators/__init__.py:5:0: E0611: No name 'validate_user_data' in module 'validators.validators' (no-name-in-module)
************* Module schemas
schemas/__init__.py:5:0: E0611: No name 'project_schema' in module 'schemas.schemas' (no-name-in-module)
schemas/__init__.py:5:0: E0611: No name 'task_schema' in module 'schemas.schemas' (no-name-in-module)
schemas/__init__.py:5:0: E0611: No name 'team_schema' in module 'schemas.schemas' (no-name-in-module)
schemas/__init__.py:5:0: E0611: No name 'user_schema' in module 'schemas.schemas' (no-name-in-module)
************* Module schemas.schemas
schemas/schemas.py:1:0: R0801: Similar lines in 2 files
==routes.task_routes:[33:92]
==routes.team_routes:[20:63]
    return jsonify({"error": "Bad Request", "message": str(error)}), 400


@task_bp.errorhandler(404)
def not_found(error):
    """
    Handle 404 Not Found errors.

    Args:
        error: The error object passed when a 404 error is encountered.

    Returns:
        A JSON response with an error message and a 404 status code.
    """
    return jsonify({"error": "Not Found", "message": str(error)}), 404


@task_bp.errorhandler(500)
def internal_error(error):
    """
    Handle 500 Internal Server errors.

    Args:
        error: The error object passed when a 500 error is encountered.

    Returns:
        A JSON response with an error message and a 500 status code.
    """
    return jsonify({"error": "Internal Server Error", "message": str(error)}), 500


# ---------------- TASK ROUTES ----------------


@task_bp.route("/tasks", methods=["POST"])
@jwt_required()
@validate_json(TASK_SCHEMA)
def create_task():
    """
    Create a new task with validation and authentication.

    This route allows a user to create a new task, validating the provided data
    (e.g., project_id, assignee_id, priority, etc.). The user must be authenticated
    via JWT, and the input data must follow the TASK_SCHEMA.

    Returns:
        A JSON response with the created task's details and a 201 status code if successful,
        or an error message with the appropriate HTTP status code if an issue arises.
    """
    try:
        # Get the authenticated user's ID from JWT
        user_id = get_jwt_identity()
        if not user_id:
            return jsonify({"error": "User not authenticated"}), 401

        data = request.get_json()

        # Validate user_id is a valid UUID
        try: (duplicate-code)
schemas/schemas.py:1:0: R0801: Similar lines in 2 files
==routes.project_routes:[128:156]
==routes.user_routes:[178:206]
    except Exception as e:
        # Rollback the session in case of any other errors
        db.session.rollback()
        return jsonify({"error": "Internal server error", "message": str(e)}), 500


@project_bp.route("/projects/<uuid:project_id>", methods=["GET"])
@jwt_required()
@cache.cached(timeout=60)
def get_project(project_id):
    """
    Get the details of a specific project.

    Args:
        project_id (uuid): The ID of the project to retrieve.

    Returns:
        A JSON response with the project's details and a 200 status code if found,
        or an error message with a 404 status code if the project does not exist.
    """
    try:
        # Check if current user exists
        current_user_id = get_jwt_identity()
        current_user = User.query.get(current_user_id)
        if not current_user:
            return jsonify({"error": "Current user not found"}), 404

        # Retrieve the project by its ID (duplicate-code)
schemas/schemas.py:1:0: R0801: Similar lines in 2 files
==models:[633:641]
==routes.task_routes:[175:184]
            priority=priority,
            deadline=deadline,
            status=status,
            project_id=project_id,
            assignee_id=assignee_id,
            created_by=created_by,
            updated_by=updated_by,
        ) (duplicate-code)
schemas/schemas.py:1:0: R0801: Similar lines in 2 files
==routes.project_routes:[165:190]
==routes.user_routes:[180:206]
        return jsonify({"error": "Internal server error", "message": str(e)}), 500


@project_bp.route("/projects/<uuid:project_id>", methods=["PUT"])
@jwt_required()
@validate_json(PROJECT_SCHEMA)
def update_project(project_id):
    """
    Update the details of an existing project.

    Args:
        project_id (uuid): The ID of the project to update.

    Returns:
        A JSON response with the updated project details and a 200 status code if successful,
        or an error message with a 404 status code if the project does not exist.
    """
    try:
        # Check if current user exists
        current_user_id = get_jwt_identity()
        current_user = User.query.get(current_user_id)
        if not current_user:
            return jsonify({"error": "Current user not found"}), 404

        # Retrieve the project by its ID (duplicate-code)
schemas/schemas.py:1:0: R0801: Similar lines in 2 files
==routes.project_routes:[131:156]
==routes.user_routes:[117:147]
        return jsonify({"error": "Internal server error", "message": str(e)}), 500


@user_bp.route("/users/<uuid:user_id>", methods=["PUT"])
@jwt_required()
@validate_json(USER_SCHEMA)
def update_user(user_id):
    """
    Update a user's details.

    This endpoint allows users to update their details such as username, email,
    password, and role (only if the user is an admin). It ensures that the current
    user is authorized to make the changes (i.e., they can only update their own details
    unless they are an admin).

    :param user_id: The UUID of the user to update.
    :return: JSON response with the updated user details or an error message.
    :status 200: Successfully updated user details.
    :status 400: Invalid input data.
    :status 403: Unauthorized access (if user tries to update someone else's details).
    :status 404: User not found.
    """
    try:
        current_user_id = get_jwt_identity()

        # Verify current user exists
        current_user = User.query.get(current_user_id)
        if not current_user:
            return jsonify({"error": "Current user not found"}), 404
 (duplicate-code)
schemas/schemas.py:1:0: R0801: Similar lines in 2 files
==routes.task_routes:[329:355]
==routes.team_routes:[117:146]
        return jsonify({"error": "Internal server error", "message": str(e)}), 500


@task_bp.route("/tasks", methods=["GET"])
@jwt_required()
def get_tasks():
    """
    Retrieve all tasks with optional filters.

    This route allows users to get a list of tasks, with optional query parameters
    to filter tasks by project ID, assignee ID, or status.

    Query Parameters:
        - project_id: Filter tasks by project ID.
        - assignee_id: Filter tasks by assignee ID.
        - status: Filter tasks by status.

    Returns:
        A JSON response with a list of tasks matching the filters and a 200 status code,
        or an error message with an appropriate HTTP status code if an issue arises.
    """
    try:
        user_id = get_jwt_identity()
        if not user_id:
            return jsonify({"error": "User not authenticated"}), 401
 (duplicate-code)
schemas/schemas.py:1:0: R0801: Similar lines in 2 files
==routes.task_routes:[193:219]
==routes.team_routes:[87:110]
        return jsonify({"error": "Internal server error", "message": str(e)}), 500


@task_bp.route("/tasks/<uuid:task_id>", methods=["GET", "PUT", "DELETE"])
@jwt_required()
def task_operations(task_id):
    """
    Perform operations on a specific task by its ID.

    This route handles GET (retrieve), PUT (update), and DELETE operations for a task.

    Args:
        task_id (uuid): The ID of the task to operate on.

    Returns:
        For GET: A JSON response with the task's details and a 200 status code if found.
        For PUT: A JSON response with the updated task's details and a 200 status code if successful.
        For DELETE: A 204 status code with no content if successful.
        Or an error message with an appropriate status code if an issue arises.
    """
    try:
        user_id = get_jwt_identity()
        if not user_id:
            return jsonify({"error": "User not authenticated"}), 401

        # Get the task from the database (duplicate-code)
schemas/schemas.py:1:0: R0801: Similar lines in 2 files
==routes.project_routes:[164:190]
==routes.user_routes:[116:147]
    except Exception as e:
        return jsonify({"error": "Internal server error", "message": str(e)}), 500


@user_bp.route("/users/<uuid:user_id>", methods=["PUT"])
@jwt_required()
@validate_json(USER_SCHEMA)
def update_user(user_id):
    """
    Update a user's details.

    This endpoint allows users to update their details such as username, email,
    password, and role (only if the user is an admin). It ensures that the current
    user is authorized to make the changes (i.e., they can only update their own details
    unless they are an admin).

    :param user_id: The UUID of the user to update.
    :return: JSON response with the updated user details or an error message.
    :status 200: Successfully updated user details.
    :status 400: Invalid input data.
    :status 403: Unauthorized access (if user tries to update someone else's details).
    :status 404: User not found.
    """
    try:
        current_user_id = get_jwt_identity()

        # Verify current user exists
        current_user = User.query.get(current_user_id)
        if not current_user:
            return jsonify({"error": "Current user not found"}), 404
 (duplicate-code)
schemas/schemas.py:1:0: R0801: Similar lines in 2 files
==routes.project_routes:[27:80]
==routes.user_routes:[23:68]
    return jsonify({"error": "Bad Request", "message": str(error)}), 400


@user_bp.errorhandler(404)
def not_found(error):
    """
    Handles 404 Not Found errors.

    :param error: The error message.
    :return: JSON response with error message and status code 404.
    """
    return jsonify({"error": "Not Found", "message": str(error)}), 404


@user_bp.errorhandler(500)
def internal_error(error):
    """
    Handles 500 Internal Server errors.

    :param error: The error message.
    :return: JSON response with error message and status code 500.
    """
    return jsonify({"error": "Internal Server Error", "message": str(error)}), 500


# ------------------ USER ROUTES ------------------
@user_bp.route("/users", methods=["POST"])
@validate_json(USER_SCHEMA)
def create_user():
    """
    Create a new user in the system.

    This endpoint allows the creation of a new user. It checks for the uniqueness of
    email and username, hashes the password before saving, and assigns a default role
    of 'member' if not provided.

    :return: JSON response with the newly created user details or an error message.
    :status 201: Successfully created user.
    :status 400: Email or username already exists.
    :status 500: Internal server error.
    """
    try:
        data = request.get_json()

        # Check if the email or username already exists (duplicate-code)


Report
======
970 statements analysed.

Statistics by type
------------------

+---------+-------+-----------+-----------+------------+---------+
|type     |number |old number |difference |%documented |%badname |
+=========+=======+===========+===========+============+=========+
|module   |10     |10         |=          |20.00       |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|class    |8      |8          |=          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|method   |5      |5          |=          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|function |53     |53         |=          |100.00      |0.00     |
+---------+-------+-----------+-----------+------------+---------+



External dependencies
---------------------
::

    extentions 
      \-extensions (app,routes.project_routes,routes.task_routes,routes.team_routes,routes.user_routes)
    flask (app,routes.project_routes,routes.task_routes,routes.team_routes,routes.user_routes,validators.validators)
    flask_jwt_extended (app,routes.project_routes,routes.task_routes,routes.team_routes,routes.user_routes)
    flask_sqlalchemy (models)
    jsonschema (validators.validators)
    models (app,routes.project_routes,routes.task_routes,routes.team_routes,routes.user_routes)
    routes 
      \-project_routes (app)
      \-task_routes (app)
      \-team_routes (app)
      \-user_routes (app)
    schemas 
      \-schemas (routes.project_routes,routes.task_routes,routes.team_routes,routes.user_routes)
    sqlalchemy 
      \-dialects 
      | \-postgresql (models)
      \-exc (models)
    validators 
      \-validators (routes.project_routes,routes.task_routes,routes.team_routes,routes.user_routes)
    werkzeug 
      \-security (app,models,routes.user_routes)



2418 lines have been analyzed

Raw metrics
-----------

+----------+-------+------+---------+-----------+
|type      |number |%     |previous |difference |
+==========+=======+======+=========+===========+
|code      |1240   |51.28 |1242     |-2.00      |
+----------+-------+------+---------+-----------+
|docstring |682    |28.21 |682      |=          |
+----------+-------+------+---------+-----------+
|comment   |139    |5.75  |139      |=          |
+----------+-------+------+---------+-----------+
|empty     |357    |14.76 |355      |+2.00      |
+----------+-------+------+---------+-----------+



Duplication
-----------

+-------------------------+------+---------+-----------+
|                         |now   |previous |difference |
+=========================+======+=========+===========+
|nb duplicated lines      |0     |0        |0          |
+-------------------------+------+---------+-----------+
|percent duplicated lines |0.000 |0.000    |=          |
+-------------------------+------+---------+-----------+



Messages by category
--------------------

+-----------+-------+---------+-----------+
|type       |number |previous |difference |
+===========+=======+=========+===========+
|convention |12     |12       |12         |
+-----------+-------+---------+-----------+
|refactor   |31     |31       |31         |
+-----------+-------+---------+-----------+
|warning    |27     |31       |31         |
+-----------+-------+---------+-----------+
|error      |159    |150      |150        |
+-----------+-------+---------+-----------+



% errors / warnings by module
-----------------------------

+-----------------------------------------------------------------------------------+------+--------+---------+-----------+
|module                                                                             |error |warning |refactor |convention |
+===================================================================================+======+========+=========+===========+
|models                                                                             |69.18 |85.19   |22.58    |50.00      |
+-----------------------------------------------------------------------------------+------+--------+---------+-----------+
|routes.team_routes                                                                 |10.06 |0.00    |9.68     |0.00       |
+-----------------------------------------------------------------------------------+------+--------+---------+-----------+
|routes.user_routes                                                                 |5.66  |7.41    |3.23     |0.00       |
+-----------------------------------------------------------------------------------+------+--------+---------+-----------+
|routes.task_routes                                                                 |5.03  |3.70    |25.81    |50.00      |
+-----------------------------------------------------------------------------------+------+--------+---------+-----------+
|routes.project_routes                                                              |5.03  |0.00    |6.45     |0.00       |
+-----------------------------------------------------------------------------------+------+--------+---------+-----------+
|validators                                                                         |2.52  |0.00    |0.00     |0.00       |
+-----------------------------------------------------------------------------------+------+--------+---------+-----------+
|schemas                                                                            |2.52  |0.00    |0.00     |0.00       |
+-----------------------------------------------------------------------------------+------+--------+---------+-----------+
|app                                                                                |0.00  |3.70    |3.23     |0.00       |
+-----------------------------------------------------------------------------------+------+--------+---------+-----------+
|schemas.schemas                                                                    |0.00  |0.00    |29.03    |0.00       |
+-----------------------------------------------------------------------------------+------+--------+---------+-----------+
|/Users/matheomorin/Desktop/Univ Oulu/web project/Task-management-LLM-API/.pylintrc |0.00  |0.00    |3.23     |0.00       |
+-----------------------------------------------------------------------------------+------+--------+---------+-----------+



Messages
--------

+-------------------------------+------------+
|message id                     |occurrences |
+===============================+============+
|no-member                      |149         |
+-------------------------------+------------+
|raise-missing-from             |16          |
+-------------------------------+------------+
|line-too-long                  |12          |
+-------------------------------+------------+
|too-many-return-statements     |10          |
+-------------------------------+------------+
|duplicate-code                 |9           |
+-------------------------------+------------+
|no-name-in-module              |8           |
+-------------------------------+------------+
|broad-exception-raised         |6           |
+-------------------------------+------------+
|unused-import                  |3           |
+-------------------------------+------------+
|too-many-positional-arguments  |3           |
+-------------------------------+------------+
|too-many-branches              |3           |
+-------------------------------+------------+
|undefined-variable             |2           |
+-------------------------------+------------+
|useless-option-value           |1           |
+-------------------------------+------------+
|unused-variable                |1           |
+-------------------------------+------------+
|too-many-statements            |1           |
+-------------------------------+------------+
|too-many-nested-blocks         |1           |
+-------------------------------+------------+
|too-many-locals                |1           |
+-------------------------------+------------+
|too-many-instance-attributes   |1           |
+-------------------------------+------------+
|pointless-string-statement     |1           |
+-------------------------------+------------+
|no-else-return                 |1           |
+-------------------------------+------------+
|inconsistent-return-statements |1           |
+-------------------------------+------------+




------------------------------------------------------------------
Your code has been rated at 1.08/10 (previous run: 1.52/10, -0.44)



[1m[93m================================================================================[0m
[1m[93m= BANDIT - Code security analysis[0m
[1m[93m================================================================================[0m

Run started:2025-03-29 22:07:08.950026

Test results:
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'super-secret'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b105_hardcoded_password_string.html
   Location: ./app.py:35:15
34	    # Application configuration
35	    app.config["JWT_SECRET_KEY"] = (
36	        "super-secret"  # Secret key for JWT token encoding (change for production)

--------------------------------------------------
>> Issue: [B201:flask_debug_true] A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.
   Severity: High   Confidence: Medium
   CWE: CWE-94 (https://cwe.mitre.org/data/definitions/94.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b201_flask_debug_true.html
   Location: ./app.py:182:4
181	    app = create_app()
182	    app.run(debug=True)

--------------------------------------------------
>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.
   Severity: Low   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess
   Location: ./code_quality.py:6:0
5	import os
6	import subprocess
7	import sys

--------------------------------------------------
>> Issue: [B602:subprocess_popen_with_shell_equals_true] subprocess call with shell=True identified, security issue.
   Severity: High   Confidence: High
   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b602_subprocess_popen_with_shell_equals_true.html
   Location: ./code_quality.py:28:13
27	    print_header(title)
28	    result = subprocess.run(command, shell=True, capture_output=True, text=True)
29	    print(result.stdout)

--------------------------------------------------
>> Issue: [B112:try_except_continue] Try, Except, Continue detected.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b112_try_except_continue.html
   Location: ./routes/user_routes.py:244:12
243	                users_list.append(user.to_dict())
244	            except Exception as e:
245	                # Continue with other users if one fails to convert
246	                continue
247	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:95:4
94	    response = client.post("/login", json={"email": "test@example.com", "password": "password123"})
95	    assert response.status_code == 200, f"Login failed: {response.data}"
96	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:116:4
115	    """
116	    assert app is not None
117	    assert app.config["TESTING"] is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:117:4
116	    assert app is not None
117	    assert app.config["TESTING"] is True
118	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:144:4
143	    response = client.post("/login", json={"email": "login@example.com", "password": "password123"})
144	    assert response.status_code == 200
145	    assert "access_token" in json.loads(response.data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:145:4
144	    assert response.status_code == 200
145	    assert "access_token" in json.loads(response.data)
146	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:160:4
159	    response = client.post("/login", json={"email": "test@example.com"})
160	    assert response.status_code == 400
161	    assert "Password is required" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:161:4
160	    assert response.status_code == 400
161	    assert "Password is required" in json.loads(response.data)["error"]
162	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:187:4
186	    )
187	    assert response.status_code == 401
188	    assert "Invalid password" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:188:4
187	    assert response.status_code == 401
188	    assert "Invalid password" in json.loads(response.data)["error"]
189	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:202:4
201	    response = client.get("/test")
202	    assert response.status_code == 401
203	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:217:4
216	    response = client.get("/nonexistent-route")
217	    assert response.status_code == 404
218	    assert "Not Found" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_app.py:218:4
217	    assert response.status_code == 404
218	    assert "Not Found" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:95:4
94	    response = client.post("/login", json={"email": "test@example.com", "password": "password123"})
95	    assert response.status_code == 200, f"Login failed: {response.data}"
96	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:116:4
115	    """
116	    assert app is not None
117	    assert app.config["TESTING"] is True

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:117:4
116	    assert app is not None
117	    assert app.config["TESTING"] is True
118	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:144:4
143	    response = client.post("/login", json={"email": "login@example.com", "password": "password123"})
144	    assert response.status_code == 200
145	    assert "access_token" in json.loads(response.data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:145:4
144	    assert response.status_code == 200
145	    assert "access_token" in json.loads(response.data)
146	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:163:4
162	    response = client.post("/login", json={"email": "test@example.com"})
163	    assert response.status_code == 400
164	    assert "Password is required" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:164:4
163	    assert response.status_code == 400
164	    assert "Password is required" in json.loads(response.data)["error"]
165	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:193:4
192	    )
193	    assert response.status_code == 401
194	    assert "Invalid password" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:194:4
193	    assert response.status_code == 401
194	    assert "Invalid password" in json.loads(response.data)["error"]
195	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:214:4
213	    )
214	    assert response.status_code == 401
215	    assert "User not found" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:215:4
214	    assert response.status_code == 401
215	    assert "User not found" in json.loads(response.data)["error"]
216	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:232:4
231	    response = client.get("/test")
232	    assert response.status_code == 401
233	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:249:4
248	    response = client.get("/test", headers={"Authorization": "Bearer invalid-token"})
249	    assert response.status_code == 422  # JWT decode error
250	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:266:4
265	    response = client.get("/test", headers={"Authorization": "Bearer"})  # Missing token value
266	    assert response.status_code == 422
267	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:284:4
283	    response = client.get("/nonexistent-route")
284	    assert response.status_code == 404
285	    assert "Not Found" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_auth.py:285:4
284	    assert response.status_code == 404
285	    assert "Not Found" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:230:4
229	    response = client.post("/login", json={"email": test_user["email"], "password": "password123"})
230	    assert response.status_code == 200, f"Login failed: {response.data}"
231	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:263:8
262	        print("Create task response:", response.data)  # Debug print
263	        assert response.status_code == 201
264	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:267:8
266	        response_data = json.loads(response.data)
267	        assert response_data["title"] == "New Test Task"
268	        assert response_data["description"] == "Description for new test task"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:268:8
267	        assert response_data["title"] == "New Test Task"
268	        assert response_data["description"] == "Description for new test task"
269	        assert response_data["status"] == StatusEnum.PENDING.value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:269:8
268	        assert response_data["description"] == "Description for new test task"
269	        assert response_data["status"] == StatusEnum.PENDING.value
270	        assert "task_id" in response_data

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:270:8
269	        assert response_data["status"] == StatusEnum.PENDING.value
270	        assert "task_id" in response_data
271	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:287:4
286	    response = client.post("/tasks", json=data, headers=auth_headers)
287	    assert response.status_code == 400
288	    assert b"'title' is a required property" in response.data

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:288:4
287	    assert response.status_code == 400
288	    assert b"'title' is a required property" in response.data
289	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:306:8
305	        print("Get all tasks response:", response.data)  # Debug print
306	        assert response.status_code == 200
307	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:310:8
309	        tasks = json.loads(response.data)
310	        assert isinstance(tasks, list)
311	        assert len(tasks) > 0

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:311:8
310	        assert isinstance(tasks, list)
311	        assert len(tasks) > 0
312	        assert any(task["title"] == "Test Task" for task in tasks)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:312:8
311	        assert len(tasks) > 0
312	        assert any(task["title"] == "Test Task" for task in tasks)
313	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:332:8
331	        print("Get tasks with filters response:", response.data)  # Debug print
332	        assert response.status_code == 200
333	        tasks = json.loads(response.data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:334:8
333	        tasks = json.loads(response.data)
334	        assert len(tasks) >= 1
335	        assert any(task["project_id"] == test_task["project_id"] for task in tasks)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:335:8
334	        assert len(tasks) >= 1
335	        assert any(task["project_id"] == test_task["project_id"] for task in tasks)
336	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:341:8
340	        )
341	        assert response.status_code == 200
342	        tasks = json.loads(response.data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:343:8
342	        tasks = json.loads(response.data)
343	        assert len(tasks) >= 1
344	        assert any(task["assignee_id"] == test_task["assignee_id"] for task in tasks)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:344:8
343	        assert len(tasks) >= 1
344	        assert any(task["assignee_id"] == test_task["assignee_id"] for task in tasks)
345	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:348:8
347	        response = client.get(f"/tasks?status={StatusEnum.PENDING.value}", headers=auth_headers)
348	        assert response.status_code == 200
349	        tasks = json.loads(response.data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:350:8
349	        tasks = json.loads(response.data)
350	        assert any(task["status"] == StatusEnum.PENDING.value for task in tasks)
351	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:367:8
366	        response = client.get(f'/tasks/{test_task["id"]}', headers=auth_headers)
367	        assert response.status_code == 200
368	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:371:8
370	        task = json.loads(response.data)
371	        assert task["task_id"] == test_task["id"]
372	        assert task["title"] == test_task["title"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:372:8
371	        assert task["task_id"] == test_task["id"]
372	        assert task["title"] == test_task["title"]
373	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:388:4
387	    # 404 means Not Found - route should return 404 if the task doesn't exist
388	    assert response.status_code in [404, 405]
389	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:407:8
406	        response = client.put(f'/tasks/{test_task["id"]}', json=data, headers=auth_headers)
407	        assert response.status_code == 200
408	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:411:8
410	        task = json.loads(response.data)
411	        assert task["title"] == "Updated Task Title"
412	        assert task["status"] == StatusEnum.IN_PROGRESS.value

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:412:8
411	        assert task["title"] == "Updated Task Title"
412	        assert task["status"] == StatusEnum.IN_PROGRESS.value
413	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:428:4
427	    response = client.put(f"/tasks/{uuid.uuid4()}", json=data, headers=auth_headers)
428	    assert response.status_code == 404
429	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:447:8
446	        print("Update task invalid status response:", response.data)  # Debug print
447	        assert response.status_code == 400
448	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:466:8
465	        print("Delete task response:", response.data)  # Debug print
466	        assert response.status_code == 204
467	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:470:8
469	        response = client.get(f'/tasks/{test_task["id"]}', headers=auth_headers)
470	        assert response.status_code == 404
471	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_task_routes.py:485:4
484	    response = client.delete(f"/tasks/{uuid.uuid4()}", headers=auth_headers)
485	    assert response.status_code == 404

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_team_routes.py:210:4
209	    # Assert the team was created successfully
210	    assert response.status_code == 201, f"Expected status code 201, got {response.status_code}"
211	    assert "team_id" in json.loads(response.data), "Response does not contain team_id"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_team_routes.py:211:4
210	    assert response.status_code == 201, f"Expected status code 201, got {response.status_code}"
211	    assert "team_id" in json.loads(response.data), "Response does not contain team_id"
212	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_team_routes.py:241:4
240	    # Assert the member was added successfully
241	    assert response.status_code == 201, f"Expected status code 201, got {response.status_code}"
242	    response_data = json.loads(response.data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_team_routes.py:243:4
242	    response_data = json.loads(response.data)
243	    assert "message" in response_data, "Response does not contain a message"
244	    assert "success" in response_data["message"].lower(), "Message does not indicate success"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_team_routes.py:244:4
243	    assert "message" in response_data, "Response does not contain a message"
244	    assert "success" in response_data["message"].lower(), "Message does not indicate success"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:108:4
107	    response = client.post("/login", json={"email": "admin@example.com", "password": "adminpass"})
108	    assert response.status_code == 200, f"Login failed: {response.data}"
109	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:137:8
136	        )
137	        assert response.status_code == 201
138	        data = json.loads(response.data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:139:8
138	        data = json.loads(response.data)
139	        assert data["username"] == "newuser"
140	        assert data["email"] == "new@example.com"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:140:8
139	        assert data["username"] == "newuser"
140	        assert data["email"] == "new@example.com"
141	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:176:8
175	        )
176	        assert response.status_code == 400
177	        assert "Email already exists" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:177:8
176	        assert response.status_code == 400
177	        assert "Email already exists" in json.loads(response.data)["error"]
178	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:213:8
212	        )
213	        assert response.status_code == 400
214	        assert "Username already exists" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:214:8
213	        assert response.status_code == 400
214	        assert "Username already exists" in json.loads(response.data)["error"]
215	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:238:8
237	        )
238	        assert response.status_code == 400
239	        assert "Invalid request data" in json.loads(response.data)["error"]

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:239:8
238	        assert response.status_code == 400
239	        assert "Invalid request data" in json.loads(response.data)["error"]
240	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:266:8
265	        response = client.get(f"/users/{user_id}", headers=auth_headers)
266	        assert response.status_code == 200
267	        data = json.loads(response.data)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:268:8
267	        data = json.loads(response.data)
268	        assert data["username"] == "getuser"
269	        assert data["email"] == "get@example.com"

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   More Info: https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html
   Location: ./tests/test_user_routes.py:269:8
268	        assert data["username"] == "getuser"
269	        assert data["email"] == "get@example.com"

--------------------------------------------------

Code scanned:
	Total lines of code: 2996
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 81
		Medium: 0
		High: 2
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 2
		High: 81
Files skipped (0):

[91m[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.13.0
[0m

[1m[93m================================================================================[0m
[1m[93m= MYPY - Type checking[0m
[1m[93m================================================================================[0m

routes/project_routes.py: error: Source file found twice under different module names: "project_routes" and "routes.project_routes"
routes/project_routes.py: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#mapping-file-paths-to-modules for more info
routes/project_routes.py: note: Common resolutions include: a) adding `__init__.py` somewhere, b) using `--explicit-package-bases` or adjusting MYPYPATH
Found 1 error in 1 file (errors prevented further checking)


[1m[93m================================================================================[0m
[1m[93m= PYTEST - Running tests with coverage[0m
[1m[93m================================================================================[0m

============================= test session starts ==============================
platform darwin -- Python 3.13.0, pytest-7.4.3, pluggy-1.5.0
rootdir: /Users/matheomorin/Desktop/Univ Oulu/web project/Task-management-LLM-API
plugins: html-4.0.2, metadata-3.1.1, cov-4.1.0, ordering-0.6, seleniumbase-4.33.7, rerunfailures-15.0, anyio-4.6.2.post1, xdist-3.6.1
collected 0 items / 5 errors

==================================== ERRORS ====================================
______________________ ERROR collecting tests/test_app.py ______________________
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/runner.py:341: in from_call
    result: Optional[TResult] = func()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/runner.py:372: in <lambda>
    call = CallInfo.from_call(lambda: list(collector.collect()), "collect")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:531: in collect
    self._inject_setup_module_fixture()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:545: in _inject_setup_module_fixture
    self.obj, ("setUpModule", "setup_module")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:310: in obj
    self._obj = obj = self._getobj()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:528: in _getobj
    return self._importtestmodule()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:617: in _importtestmodule
    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/pathlib.py:567: in import_path
    importlib.import_module(module_name)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1387: in _gcd_import
    ???
<frozen importlib._bootstrap>:1360: in _find_and_load
    ???
<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:935: in _load_unlocked
    ???
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:186: in exec_module
    exec(co, module.__dict__)
tests/test_app.py:7: in <module>
    from app import create_app
app.py:14: in <module>
    from models import User
models.py:177: in <module>
    class PriorityEnum(int, Enum):
E   NameError: name 'Enum' is not defined
_____________________ ERROR collecting tests/test_auth.py ______________________
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/runner.py:341: in from_call
    result: Optional[TResult] = func()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/runner.py:372: in <lambda>
    call = CallInfo.from_call(lambda: list(collector.collect()), "collect")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:531: in collect
    self._inject_setup_module_fixture()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:545: in _inject_setup_module_fixture
    self.obj, ("setUpModule", "setup_module")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:310: in obj
    self._obj = obj = self._getobj()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:528: in _getobj
    return self._importtestmodule()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:617: in _importtestmodule
    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/pathlib.py:567: in import_path
    importlib.import_module(module_name)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1387: in _gcd_import
    ???
<frozen importlib._bootstrap>:1360: in _find_and_load
    ???
<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:935: in _load_unlocked
    ???
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:186: in exec_module
    exec(co, module.__dict__)
tests/test_auth.py:7: in <module>
    from app import create_app
app.py:14: in <module>
    from models import User
models.py:177: in <module>
    class PriorityEnum(int, Enum):
E   NameError: name 'Enum' is not defined
__________________ ERROR collecting tests/test_task_routes.py __________________
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/runner.py:341: in from_call
    result: Optional[TResult] = func()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/runner.py:372: in <lambda>
    call = CallInfo.from_call(lambda: list(collector.collect()), "collect")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:531: in collect
    self._inject_setup_module_fixture()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:545: in _inject_setup_module_fixture
    self.obj, ("setUpModule", "setup_module")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:310: in obj
    self._obj = obj = self._getobj()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:528: in _getobj
    return self._importtestmodule()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:617: in _importtestmodule
    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/pathlib.py:567: in import_path
    importlib.import_module(module_name)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1387: in _gcd_import
    ???
<frozen importlib._bootstrap>:1360: in _find_and_load
    ???
<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:935: in _load_unlocked
    ???
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:186: in exec_module
    exec(co, module.__dict__)
tests/test_task_routes.py:9: in <module>
    from models import PriorityEnum, Project, StatusEnum, Task, User, db
models.py:177: in <module>
    class PriorityEnum(int, Enum):
E   NameError: name 'Enum' is not defined
__________________ ERROR collecting tests/test_team_routes.py __________________
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/runner.py:341: in from_call
    result: Optional[TResult] = func()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/runner.py:372: in <lambda>
    call = CallInfo.from_call(lambda: list(collector.collect()), "collect")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:531: in collect
    self._inject_setup_module_fixture()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:545: in _inject_setup_module_fixture
    self.obj, ("setUpModule", "setup_module")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:310: in obj
    self._obj = obj = self._getobj()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:528: in _getobj
    return self._importtestmodule()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:617: in _importtestmodule
    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/pathlib.py:567: in import_path
    importlib.import_module(module_name)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1387: in _gcd_import
    ???
<frozen importlib._bootstrap>:1360: in _find_and_load
    ???
<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:935: in _load_unlocked
    ???
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:186: in exec_module
    exec(co, module.__dict__)
tests/test_team_routes.py:11: in <module>
    from models import PriorityEnum, StatusEnum, Team, User, db
models.py:177: in <module>
    class PriorityEnum(int, Enum):
E   NameError: name 'Enum' is not defined
__________________ ERROR collecting tests/test_user_routes.py __________________
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/runner.py:341: in from_call
    result: Optional[TResult] = func()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/runner.py:372: in <lambda>
    call = CallInfo.from_call(lambda: list(collector.collect()), "collect")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:531: in collect
    self._inject_setup_module_fixture()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:545: in _inject_setup_module_fixture
    self.obj, ("setUpModule", "setup_module")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:310: in obj
    self._obj = obj = self._getobj()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:528: in _getobj
    return self._importtestmodule()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/python.py:617: in _importtestmodule
    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/pathlib.py:567: in import_path
    importlib.import_module(module_name)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
<frozen importlib._bootstrap>:1387: in _gcd_import
    ???
<frozen importlib._bootstrap>:1360: in _find_and_load
    ???
<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked
    ???
<frozen importlib._bootstrap>:935: in _load_unlocked
    ???
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/assertion/rewrite.py:186: in exec_module
    exec(co, module.__dict__)
tests/test_user_routes.py:8: in <module>
    from app import create_app
app.py:14: in <module>
    from models import User
models.py:177: in <module>
    class PriorityEnum(int, Enum):
E   NameError: name 'Enum' is not defined
=============================== warnings summary ===============================
../../../../../../Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/sqlalchemy/sql/sqltypes.py:2061
  /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/sqlalchemy/sql/sqltypes.py:2061: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).
    epoch = dt.datetime.utcfromtimestamp(0)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html

---------- coverage: platform darwin, python 3.13.0-final-0 ----------
Name                        Stmts   Miss  Cover
-----------------------------------------------
app.py                         68     62     9%
code_quality.py                50     50     0%
extentions/extensions.py        2      0   100%
models.py                     312    260    17%
schemas/__init__.py             2      2     0%
schemas/schemas.py              5      5     0%
tests/__init__.py               0      0   100%
tests/test_app.py              61     56     8%
tests/test_auth.py             71     66     7%
tests/test_task_routes.py     143    136     5%
tests/test_team_routes.py      61     54    11%
tests/test_user_routes.py      73     67     8%
validators/__init__.py          2      2     0%
validators/validators.py       17     17     0%
-----------------------------------------------
TOTAL                         867    777    10%

=========================== short test summary info ============================
ERROR tests/test_app.py - NameError: name 'Enum' is not defined
ERROR tests/test_auth.py - NameError: name 'Enum' is not defined
ERROR tests/test_task_routes.py - NameError: name 'Enum' is not defined
ERROR tests/test_team_routes.py - NameError: name 'Enum' is not defined
ERROR tests/test_user_routes.py - NameError: name 'Enum' is not defined
!!!!!!!!!!!!!!!!!!! Interrupted: 5 errors during collection !!!!!!!!!!!!!!!!!!!!
========================= 1 warning, 5 errors in 0.75s =========================

